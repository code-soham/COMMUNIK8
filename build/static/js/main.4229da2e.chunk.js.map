{"version":3,"sources":["components/Login.jsx","components/MsgForm.jsx","components/MyMsg.jsx","components/RcvMsg.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["Login","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","auth","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MsgForm","props","setValue","chatID","creds","console","log","event","text","trim","length","sendMessage","action","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMsg","message","attachments","src","file","alt","float","height","width","marginRight","color","backgroundColor","RcvMsg","lastMessage","isFirstMessage","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","title","App","getItem","userSecret","projectID","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4229da2e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nconst Login=()=>{\r\n    const [username,setUsername]=useState('');\r\n    const [password, setPassword]=useState('');\r\n    const[error,setError]=useState('');\r\n\r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault();\r\n        const auth={\r\n            'Project-ID': \"facac216-a449-4549-a9f1-5cfa8aab1df8\",\r\n            'User-Name': username,\r\n            'User-Secret':password\r\n        }\r\n        try{\r\n            await axios.get('https://api.chatengine.io/chats',{headers:auth});\r\n            \r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password',password);\r\n\r\n            window.location.reload();\r\n        \r\n        }catch(error){\r\n                setError('IMPOSTER DETECTED!');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">\r\n                    COMMUNIK8\r\n                </h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\r\n                    <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Go Social!</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n                <footer className=\"footNote\">New Users must be added by Admin to log in and use Communik8</footer>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default Login;","import { useState } from 'react';\r\nimport { sendMessage, isTyping} from 'react-chat-engine';\r\nimport {SendOutlined,PictureOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst MsgForm = (props) => {\r\n  const [value,setValue] = useState('');\r\nconst { chatID,creds}=props;\r\nconsole.log(chatID);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const text= value.trim();\r\n    console.log(text);\r\n    if(text.length>0)\r\n    sendMessage(creds,chatID,{text});\r\n\r\n    setValue(\"\");\r\n  }\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props,chatID);\r\n  }\r\n  const handleUpload = (event)=>{\r\n    sendMessage(creds,chatID,{files: event.target.files, text: \"\"})\r\n  }\r\n  return (\r\n    <form action=\"submit\" onSubmit={handleSubmit} className=\"message-form\">\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"write here\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      ></input>\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\"/>\r\n        </span>\r\n      </label>\r\n      <input\r\n      type=\"file\"\r\n      multiple={false}\r\n      id=\"upload-button\"\r\n      style={{display:'none'}}\r\n      onChange={handleUpload}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n      <SendOutlined className=\"send-icon\"/>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default MsgForm;\r\n","const MyMsg = ({ message }) => {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"image\"\r\n        style={{ float: \"right\", height: \"100px\", width: \"100px\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"-40px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3b2a50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\nexport default MyMsg;\r\n","const RcvMsg = ({ message, lastMessage }) => {\r\n  const isFirstMessage =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessage && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"image\"\r\n          height=\"100px\"\r\n          width=\"100px\"\r\n          style={{ marginLeft: isFirstMessage ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#CABCDC\",\r\n            marginLeft: isFirstMessage ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default RcvMsg;\r\n","import MsgForm from \"./MsgForm\";\r\nimport MyMsg from \"./MyMsg\";\r\nimport RcvMsg from \"./RcvMsg\";\r\n\r\nconst ChatFeed = (props) => {\r\n  //console.log(props);\r\n  const { chats, activeChat, userName, messages } = props;\r\n  const chat = chats && chats[activeChat];\r\n  //console.log(chat,userName,messages);\r\n\r\n  const renderReadReceipts=(message,isMyMessage)=>{\r\n    return chat.people.map((person,index)=>person.last_read=== message.id && (\r\n      <div\r\n        key={`read_${index}`}\r\n        className=\"read-receipt\"\r\n        style={{\r\n          float: isMyMessage?'right': 'left',\r\n          backgroundImage: `url(${person?.person?.avatar})`\r\n        }}\r\n      />\r\n    ))\r\n  }\r\n\r\n\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n    //console.log(keys);\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = (userName === message.sender.username)\r\n      console.log(message.sender.username);\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMsg message={message} />\r\n            ) : (\r\n              <RcvMsg\r\n                message={message}\r\n                lastMessage={message[lastMessageKey]}\r\n              ></RcvMsg>\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-receipts\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            {renderReadReceipts(message,isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  renderMessages();\r\n  //console.log(chat);\r\n  \r\n  if (!chat) return \"loading..\";\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n        {renderMessages()}\r\n        <div style={{ height: \"100px\" }} />\r\n        <div className=\"message-form-container\">\r\n          <MsgForm {...props} chatID={activeChat} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n","import { ChatEngine } from \"react-chat-engine\";\r\nimport \"./App.css\";\r\nimport Login from './components/Login';\r\nimport ChatFeed from \"./components/ChatFeed\";\r\nexport function App() {\r\n\r\n\r\n  if(!localStorage.getItem('username'))\r\n  return (<Login/>)\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      //userName=\"code_soham\"\r\n      userSecret={localStorage.getItem('password')}\r\n      userName={localStorage.getItem('username')}\r\n      projectID=\"facac216-a449-4549-a9f1-5cfa8aab1df8\"\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n    />\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App.js\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}